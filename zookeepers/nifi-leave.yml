---
- name: nifi-leave.yml
  hosts: localhost
  become: True
  become_user: root
  gather_facts: false
  tasks:

    - name: stat live conf files 1 of 3
      stat:
        path: /opt/nifi/conf/authorizations.xml
      register: live_file_1

    - name: end if conf file not found 1 of 3
      meta: end_host
      when:
        - live_file_1.stat.exists == false

    - name: stat live conf files 2 of 3
      stat:
        path: /opt/nifi/conf/flow.xml.gz
      register: live_file_2

    - name: end if conf file not found 2 of 3
      meta: end_host
      when:
        - live_file_2.stat.exists == false

    - name: stat live conf files 3 of 3
      stat:
        path: /opt/nifi/conf/users.xml
      register: live_file_3

    - name: end if conf file not found 3 of 3
      meta: end_host
      when:
        - live_file_3.stat.exists == false

    - name: get bucket name
      shell: |
        cat /opt/nifi-conf/bucket
      register: s3_bucket

    - name: get kms key id
      shell: |
        cat /opt/nifi-conf/kms-key-id
      register: kms_key_id

    - name: determine lock exists
      aws_s3:
        mode: get
        bucket: "{{ s3_bucket.stdout }}"
        object: "nifi/cluster/lock-leave"
        dest: "/opt/nifi-cluster/lock-leave"
      ignore_errors: true
      register: lock_leave

    - name: end if lock-leave found
      meta: end_host
      when:
        - lock_leave.failed == false

    - name: get leave requests
      aws_s3:
        mode: list
        bucket: "{{ s3_bucket.stdout }}"
        prefix: "nifi/cluster/leave/"
      ignore_errors: true
      register: cluster_leave

    - name: end if no leave keys 
      meta: end_host
      when:
        - cluster_leave.s3_keys | length == 0

    - name: touch local leave lock
      file:
        state: touch
        path: /opt/nifi-cluster/lock-leave
        owner: root
        group: root
        mode: '0640'

    - name: set lock
      aws_s3:
        mode: put
        bucket: "{{ s3_bucket.stdout }}"
        object: "/nifi/cluster/lock-leave"
        src: "{{ item }}"
        encrypt: yes
        encryption_mode: "aws:kms"
        encryption_kms_key_id: "{{ kms_key_id.stdout }}"
      with_items:
        - /opt/nifi-cluster/lock-leave

    - name: process leaves by deleting from cluster
      shell: |
        /opt/nifi-toolkit/bin/cli.sh nifi delete-node --nifiNodeId {{ item.split('/')[3] }} -p /opt/nifi-certificates/admin/cli.properties
      with_items: 
        - "{{ cluster_leave.s3_keys | reject('eq','nifi/cluster/leave/') | list }}"
      retries: 120
      delay: 10
      register: process_delete
      until: process_delete is not failed
      ignore_errors: true

    - name: remove leave request(s)
      aws_s3:
        mode: delobj
        bucket: "{{ s3_bucket.stdout }}"
        object: "{{ item }}"
      with_items:
        - "{{ cluster_leave.s3_keys }}"

    - name: remove lock
      aws_s3:
        mode: delobj
        bucket: "{{ s3_bucket.stdout }}"
        object: "/nifi/cluster/lock-leave"
