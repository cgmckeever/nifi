---
- name: nifi-join.yml
  hosts: localhost
  become: True
  become_user: root
  gather_facts: false
  tasks:

    - name: stat live conf files 1 of 3
      stat:
        path: /opt/nifi/conf/authorizations.xml
      register: live_file_1

    - name: end if conf file not found 1 of 3
      meta: end_host
      when:
        - live_file_1.stat.exists == false

    - name: stat live conf files 2 of 3
      stat:
        path: /opt/nifi/conf/flow.xml.gz
      register: live_file_2

    - name: end if conf file not found 2 of 3
      meta: end_host
      when:
        - live_file_2.stat.exists == false

    - name: stat live conf files 3 of 3
      stat:
        path: /opt/nifi/conf/users.xml
      register: live_file_3

    - name: end if conf file not found 3 of 3
      meta: end_host
      when:
        - live_file_3.stat.exists == false

    - name: touch a blank lock file
      file:
        state: touch
        path: /opt/nifi-cluster/lock-join
        owner: root
        group: root
        mode: '0640'

    - name: get bucket name
      shell: |
        cat /opt/nifi-conf/bucket
      register: s3_bucket

    - name: determine lock exists
      aws_s3:
        mode: list
        bucket: "{{ s3_bucket.stdout }}"
        object: "/nifi/cluster/{{ item }}"
      with_items:
        - lock-join
      ignore_errors: true
      register: lock-join

      retries: 60
      delay: 10

    - name: end if lock-join found
      meta: end_host
      when:
        - "{{ lock-join | length }} != 0"

    - name: get join requests
      aws_s3:
        mode: list
        bucket: "{{ s3_bucket.stdout }}"
        object: "/nifi/cluster/join/"
      ignore_errors: true
      register: cluster-join

    - name: end if cluster-join list is zero
      meta: end_host
      when:
        - "{{ cluster-join | length }} == 0"

    - name: set lock
      aws_s3:
        mode: put
        bucket: "{{ s3_bucket.stdout }}"
        object: "/nifi/cluster/{{ item }}"
      with_items:
        - /opt/nifi-cluster/lock-join

    - name: create user(s) from filename(s)
      shell: |
        export JAVA_HOME=/usr/lib/jvm/default-java
        /opt/nifi-toolkit/bin/cli.sh nifi create-user --userName "CN={{ item.split('/')[3] }}, OU=NIFI" -p /mnt/nifi/admin-certificates/cli.properties
      with_items:
        - "{{ cluster_join.s3_keys | reject('eq','nifi/cluster/join/') | list }}"
      ignore_errors: true

    - name: copy live conf files to nfs
      copy:
        src: "/opt/nifi/conf/{{ item }}"
        dest: "/mnt/nifi/conf/{{ item }}"
        owner: root
        group: root
        mode: 0640
      with_items:
        - authorizations.xml
        - flow.xml.gz
        - users.xml
      when: set_lock.changed

    - name: remove join request(s)
      file:
        path: "{{ item.path }}"
        state: absent
      with_items: "{{ cluster_requests.files }}"
      when: set_lock.changed

    - name: touch join invite(s)
      file:
        path: "/mnt/nifi/cluster/invite/{{ item.path | basename }}"
        state: touch
        owner: root
        group: root
        mode: 0640
      with_items: "{{ cluster_requests.files }}"
      when: set_lock.changed

    - name: remove lock
      file:
        path: /mnt/nifi/cluster/lock-join
        state: absent
      when: set_lock.changed
